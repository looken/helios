syntax = "proto2";

package helios;

option cc_generic_services = true;

message Base64EncodeReq {
    optional string data = 1;
}

message Base64EncodeResp {
    optional string data = 1;
    optional string data_base64 = 2;
}

message Base64DecodeReq {
    optional string data_base64 = 1;
}

message Base64DecodeResp {
    optional string data_base64 = 1;
    optional string data = 2;
}

message Md5EncodeReq {
    optional string data = 1;
}

message Md5EncodeResp {
    optional string data = 1;
    optional string data_md5 = 2;
}

message TimeStampToDateReq {
    optional uint64 timestamp = 1;
}

message TimeStampToDateResp {
    optional uint64 timestamp = 1;
    optional string date = 2;
}

message DateToTimeStampReq {
    optional string date = 2;
}

message DateToTimeStampResp {
    optional string date = 1;
    optional uint64 timestamp = 2;
}

message EmojiReq {
    optional string key = 1;
}

message Emoji {
    optional string name = 1;
    optional string url = 2;
}

message EmojiResp {
    repeated Emoji emojis = 1;
}

message BackgroundImageReq {
    optional string key = 1;
}

message BackgroundImage {
    optional string name = 1;
    optional string url = 2;
}

message BackgroundImageResp {
    repeated BackgroundImage background_images = 1;
}

message ZuowenReq {
    optional string key = 1;
}

message ZuowenInfo {
    optional string grade = 1;
    optional string type = 2;
    optional string name = 3;
    optional string url = 4;
}

message ZuowenResp {
    repeated ZuowenInfo zuowen_infos = 1;
}

message ZuowenTypeReq {
    optional string level = 1;
}

message ZuowenType {
    optional string grade = 1;
    repeated string types = 2;
}

message ZuowenTypeResp {
    optional string level = 1;
    repeated ZuowenType zuowen_types = 2;
}

message ToolsListReq {
}

message ToolsItem {
    optional string id = 1;
    optional string name = 2;
}

message ToolsListResp {
    repeated ToolsItem content = 1;
}

service HeliosService {
    rpc tools_list(ToolsListReq) returns(ToolsListResp);

    rpc md5_encode(Md5EncodeReq) returns(Md5EncodeResp);
    rpc base64_encode(Base64EncodeReq) returns(Base64EncodeResp);
    rpc base64_decode(Base64DecodeReq) returns(Base64DecodeResp);
    rpc timestamp_to_date(TimeStampToDateReq) returns(TimeStampToDateResp);
    rpc date_to_timestamp(DateToTimeStampReq) returns(DateToTimeStampResp);

    rpc emoji(EmojiReq) returns(EmojiResp);
    rpc background_image(BackgroundImageReq) returns(BackgroundImageResp);
    rpc zuowen(ZuowenReq) returns(ZuowenResp);

    rpc zuowen_type(ZuowenTypeReq) returns(ZuowenTypeResp);
}
